#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
int determinant(int n, int originalsize, int**matrix){
	if(n==1){
		return (matrix[0][0]*matrix[1][1])-(matrix[1][0]*matrix[0][1]);
	}
	int answer=0;
	for(int i=0; i<=n; i++){
		int **matrixmini;
		matrixmini=malloc(sizeof(int*)*n);
		for(int l=0; l<n; l++){
			matrixmini[l]=malloc(sizeof(int)*n);
		}
		for(int j=0; j<n; j++){
			for(int k=0; k<n; k++){

				if(j>=i){
				// 	break;
				// }
				// if(j>i){
					
					//matrixmini[j][k]=0;
					matrixmini[j][k]=matrix[j+1][k+1];
				}
				else{
					matrixmini[j][k]=matrix[j][k+1];
				}
				//printf("%d\n", matrix[j][k]);
				// printf("%d\n", matrixmini[j][k]);
			}
		}
		// printf("%d\n", matrix[i][0]);
		//printf("%d\n", n);
		int det=determinant(n-1, originalsize, matrixmini);
		int plusmin=1;
		//gets whether determinant is positive or negative
		for(int j=0; j<i; j++){
			plusmin=plusmin*-1;
			// printf("%d\n", plusmin);
		}
		// printf("i= %d\n", i);
		// printf("originalsize= %d\n", originalsize);
		// printf("n= %d\n", n);
		answer=answer+(matrix[i][0]*plusmin*det);
		//  printf("plusmin= %d\n", plusmin);
		//printf("%d\n", answer);
		for(int m=0; m<n; m++){
			free(matrixmini[m]);
		}
		free(matrixmini);
	}
	return answer;
}
int main(int argc, char const *argv[]){
	FILE* fp= fopen(argv[1], "r");
	int n=0;
	fscanf(fp, "%d", &n);
	//printf("%d\n", n);
	int **matrix;
	matrix=malloc(sizeof(int*)*n);
	for(int i=0; i<n; i++){
		matrix[i]=malloc(sizeof(int)*n);
	}
	for(int i=0;i<n; i++){
		for(int j=0;j<n; j++){
			fscanf(fp, "%d", &matrix[i][j]);
			//printf("%d\n", matrix[i][j]);
		}
	}
	printf("%d\n", determinant(n-1, n-1, matrix));
	for(int i=0; i<n; i++){
		free(matrix[i]);
	}
	free(matrix);
}
